import { z } from 'zod';
export declare const baseSchema: z.ZodObject<{
    ADMIN_PASSWORD: z.ZodString;
    ADMIN_USERNAME: z.ZodString;
    PEERADDRESSES: z.ZodEffects<z.ZodString, string, string>;
    PEERNAME: z.ZodString;
    SECRET: z.ZodString;
    USER_PASSWORD: z.ZodString;
    USER_USERNAME: z.ZodString;
}, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    ADMIN_PASSWORD: z.ZodString;
    ADMIN_USERNAME: z.ZodString;
    PEERADDRESSES: z.ZodEffects<z.ZodString, string, string>;
    PEERNAME: z.ZodString;
    SECRET: z.ZodString;
    USER_PASSWORD: z.ZodString;
    USER_USERNAME: z.ZodString;
}, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    ADMIN_PASSWORD: z.ZodString;
    ADMIN_USERNAME: z.ZodString;
    PEERADDRESSES: z.ZodEffects<z.ZodString, string, string>;
    PEERNAME: z.ZodString;
    SECRET: z.ZodString;
    USER_PASSWORD: z.ZodString;
    USER_USERNAME: z.ZodString;
}, z.ZodTypeAny, "passthrough">>;
export declare const dnsSchema: z.ZodObject<z.objectUtil.extendShape<{
    ADMIN_PASSWORD: z.ZodString;
    ADMIN_USERNAME: z.ZodString;
    PEERADDRESSES: z.ZodEffects<z.ZodString, string, string>;
    PEERNAME: z.ZodString;
    SECRET: z.ZodString;
    USER_PASSWORD: z.ZodString;
    USER_USERNAME: z.ZodString;
}, {
    GATEWAY_DOMAIN: z.ZodString;
    IPFS_PEERING_DOMAIN: z.ZodOptional<z.ZodString>;
    UPLOAD_DOMAIN: z.ZodString;
}>, "passthrough", z.ZodTypeAny, z.objectOutputType<z.objectUtil.extendShape<{
    ADMIN_PASSWORD: z.ZodString;
    ADMIN_USERNAME: z.ZodString;
    PEERADDRESSES: z.ZodEffects<z.ZodString, string, string>;
    PEERNAME: z.ZodString;
    SECRET: z.ZodString;
    USER_PASSWORD: z.ZodString;
    USER_USERNAME: z.ZodString;
}, {
    GATEWAY_DOMAIN: z.ZodString;
    IPFS_PEERING_DOMAIN: z.ZodOptional<z.ZodString>;
    UPLOAD_DOMAIN: z.ZodString;
}>, z.ZodTypeAny, "passthrough">, z.objectInputType<z.objectUtil.extendShape<{
    ADMIN_PASSWORD: z.ZodString;
    ADMIN_USERNAME: z.ZodString;
    PEERADDRESSES: z.ZodEffects<z.ZodString, string, string>;
    PEERNAME: z.ZodString;
    SECRET: z.ZodString;
    USER_PASSWORD: z.ZodString;
    USER_USERNAME: z.ZodString;
}, {
    GATEWAY_DOMAIN: z.ZodString;
    IPFS_PEERING_DOMAIN: z.ZodOptional<z.ZodString>;
    UPLOAD_DOMAIN: z.ZodString;
}>, z.ZodTypeAny, "passthrough">>;
export declare const readPartialBaseSchema: z.ZodObject<{
    ADMIN_PASSWORD: z.ZodOptional<z.ZodString>;
    ADMIN_USERNAME: z.ZodOptional<z.ZodString>;
    PEERADDRESSES: z.ZodOptional<z.ZodEffects<z.ZodString, string, string>>;
    PEERNAME: z.ZodOptional<z.ZodString>;
    SECRET: z.ZodOptional<z.ZodString>;
    USER_PASSWORD: z.ZodOptional<z.ZodString>;
    USER_USERNAME: z.ZodOptional<z.ZodString>;
}, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    ADMIN_PASSWORD: z.ZodOptional<z.ZodString>;
    ADMIN_USERNAME: z.ZodOptional<z.ZodString>;
    PEERADDRESSES: z.ZodOptional<z.ZodEffects<z.ZodString, string, string>>;
    PEERNAME: z.ZodOptional<z.ZodString>;
    SECRET: z.ZodOptional<z.ZodString>;
    USER_PASSWORD: z.ZodOptional<z.ZodString>;
    USER_USERNAME: z.ZodOptional<z.ZodString>;
}, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    ADMIN_PASSWORD: z.ZodOptional<z.ZodString>;
    ADMIN_USERNAME: z.ZodOptional<z.ZodString>;
    PEERADDRESSES: z.ZodOptional<z.ZodEffects<z.ZodString, string, string>>;
    PEERNAME: z.ZodOptional<z.ZodString>;
    SECRET: z.ZodOptional<z.ZodString>;
    USER_PASSWORD: z.ZodOptional<z.ZodString>;
    USER_USERNAME: z.ZodOptional<z.ZodString>;
}, z.ZodTypeAny, "passthrough">>;
export declare const readPartialDnsSchema: z.ZodObject<{
    ADMIN_PASSWORD: z.ZodOptional<z.ZodString>;
    ADMIN_USERNAME: z.ZodOptional<z.ZodString>;
    PEERADDRESSES: z.ZodOptional<z.ZodEffects<z.ZodString, string, string>>;
    PEERNAME: z.ZodOptional<z.ZodString>;
    SECRET: z.ZodOptional<z.ZodString>;
    USER_PASSWORD: z.ZodOptional<z.ZodString>;
    USER_USERNAME: z.ZodOptional<z.ZodString>;
    GATEWAY_DOMAIN: z.ZodOptional<z.ZodString>;
    IPFS_PEERING_DOMAIN: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    UPLOAD_DOMAIN: z.ZodOptional<z.ZodString>;
}, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    ADMIN_PASSWORD: z.ZodOptional<z.ZodString>;
    ADMIN_USERNAME: z.ZodOptional<z.ZodString>;
    PEERADDRESSES: z.ZodOptional<z.ZodEffects<z.ZodString, string, string>>;
    PEERNAME: z.ZodOptional<z.ZodString>;
    SECRET: z.ZodOptional<z.ZodString>;
    USER_PASSWORD: z.ZodOptional<z.ZodString>;
    USER_USERNAME: z.ZodOptional<z.ZodString>;
    GATEWAY_DOMAIN: z.ZodOptional<z.ZodString>;
    IPFS_PEERING_DOMAIN: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    UPLOAD_DOMAIN: z.ZodOptional<z.ZodString>;
}, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    ADMIN_PASSWORD: z.ZodOptional<z.ZodString>;
    ADMIN_USERNAME: z.ZodOptional<z.ZodString>;
    PEERADDRESSES: z.ZodOptional<z.ZodEffects<z.ZodString, string, string>>;
    PEERNAME: z.ZodOptional<z.ZodString>;
    SECRET: z.ZodOptional<z.ZodString>;
    USER_PASSWORD: z.ZodOptional<z.ZodString>;
    USER_USERNAME: z.ZodOptional<z.ZodString>;
    GATEWAY_DOMAIN: z.ZodOptional<z.ZodString>;
    IPFS_PEERING_DOMAIN: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    UPLOAD_DOMAIN: z.ZodOptional<z.ZodString>;
}, z.ZodTypeAny, "passthrough">>;
export type BaseConfig = z.infer<typeof baseSchema>;
export type DnsConfig = z.infer<typeof dnsSchema>;
export type PartialBaseConfig = z.infer<typeof readPartialBaseSchema>;
export type PartialDnsConfig = z.infer<typeof readPartialDnsSchema>;
