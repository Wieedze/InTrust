import { BaseCommand } from '../../base-command.js';
export default class Sync extends BaseCommand {
    static args: {
        mode: import("@oclif/core/interfaces").Arg<string, Record<string, unknown>>;
    };
    static description: string;
    static examples: string[];
    static flags: {
        chunkSize: import("@oclif/core/interfaces").OptionFlag<number, import("@oclif/core/interfaces").CustomOptions>;
        errorThreshold: import("@oclif/core/interfaces").OptionFlag<number, import("@oclif/core/interfaces").CustomOptions>;
        errorWindow: import("@oclif/core/interfaces").OptionFlag<number, import("@oclif/core/interfaces").CustomOptions>;
        limit: import("@oclif/core/interfaces").OptionFlag<number | undefined, import("@oclif/core/interfaces").CustomOptions>;
        pinSource: import("@oclif/core/interfaces").OptionFlag<string, import("@oclif/core/interfaces").CustomOptions>;
        progressUpdate: import("@oclif/core/interfaces").OptionFlag<number, import("@oclif/core/interfaces").CustomOptions>;
        retry: import("@oclif/core/interfaces").BooleanFlag<boolean>;
        statusFile: import("@oclif/core/interfaces").OptionFlag<string | undefined, import("@oclif/core/interfaces").CustomOptions>;
    };
    run(): Promise<void>;
    private calculateRollingErrorRate;
    private getProcessedPins;
    private loadConfig;
    private processChunk;
    private savePinsToCsv;
    private syncPin;
    private writeChunkResults;
    private writeCsvLine;
}
