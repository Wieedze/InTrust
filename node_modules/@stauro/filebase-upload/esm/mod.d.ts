import type { RequiredArgs } from './types.js';
export declare class HashImpl {
    #private;
    constructor(algorithmIdentifier: string, secret?: string);
    update(toHash: string, encoding?: 'utf8' | 'ascii' | 'latin1'): void;
    digest(): Promise<Uint8Array>;
    reset(): void;
}
export declare const createPresignedUrl: ({ bucketName, apiUrl, file, token }: {
    file: File;
} & RequiredArgs) => Promise<string>;
export declare const uploadCar: ({ file, ...args }: RequiredArgs & {
    file: File;
}) => Promise<Response>;
export declare const headObject: ({ bucketName, filename, apiUrl, token }: RequiredArgs & {
    filename: string;
}) => Promise<[boolean, string | null]>;
export declare const getObject: ({ bucketName, filename, apiUrl, token }: RequiredArgs & {
    filename: string;
}) => Promise<Response>;
//# sourceMappingURL=mod.d.ts.map