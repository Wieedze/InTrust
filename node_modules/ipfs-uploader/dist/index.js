import { NodeUploader } from "./NodeUploader.js";
import { PinataUploader } from "./PinataUploader.js";
import { S3Uploader } from "./S3Uploader.js";
import { MultiUploader } from "./MultiUploader.js";
export * from "./types.js";
export { NodeUploader } from "./NodeUploader.js";
export { PinataUploader } from "./PinataUploader.js";
export { S3Uploader } from "./S3Uploader.js";
export { MultiUploader } from "./MultiUploader.js";
export { createPresignedUrl } from "./utils/createPresignedUrl.js";
export function createUploader(config) {
    const getOptions = (c) => ("options" in c ? c.options : c);
    if (Array.isArray(config)) {
        const uploaders = config.map((c) => {
            const options = getOptions(c);
            if ("jwt" in options || "signingEndpoint" in options) {
                return new PinataUploader(c);
            }
            else if ("bucket" in options) {
                return new S3Uploader(c);
            }
            return new NodeUploader(c);
        });
        return new MultiUploader(uploaders);
    }
    const options = getOptions(config);
    if ("jwt" in options || "signingEndpoint" in options) {
        return new PinataUploader(config);
    }
    else if ("bucket" in options) {
        return new S3Uploader(config);
    }
    return new NodeUploader(config);
}
